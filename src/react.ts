import type { Linter } from "eslint";

const config: Linter.Config = {
  overrides: [
    {
      files: ["**/*.ts?(x)"],
      plugins: ["react", "react-hooks", "jsx-a11y"],
      settings: {
        react: {
          version: "detect",
        },
      },
      parserOptions: {
        ecmaFeatures: {
          jsx: true,
        },
      },
      rules: {
        "react/boolean-prop-naming": "error",
        "react/button-has-type": "error",
        "react/default-props-match-prop-types": "error",
        "react/destructuring-assignment": "error",
        "react/display-name": "off",
        "react/forbid-component-props": "off",
        "react/forbid-dom-props": "off",
        "react/forbid-elements": "off",
        "react/forbid-foreign-prop-types": "error",
        "react/forbid-prop-types": "error",
        "react/function-component-definition": [
          "error",
          {
            namedComponents: "arrow-function",
            unnamedComponents: "arrow-function",
          },
        ],
        "react/jsx-boolean-value": ["error", "never"],
        "react/jsx-child-element-spacing": "error",
        "react/jsx-closing-bracket-location": ["error", "line-aligned"],
        "react/jsx-closing-tag-location": "error",
        "react/jsx-curly-brace-presence": [
          "error",
          {
            children: "never",
            props: "never",
          },
        ],
        "react/jsx-curly-newline": "error",
        "react/jsx-curly-spacing": [
          "error",
          "never",
          {
            allowMultiline: true,
          },
        ],
        "react/jsx-equals-spacing": ["error", "never"],
        "react/jsx-filename-extension": [2, { extensions: [".jsx", "tsx"] }],
        "react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
        "react/jsx-fragments": ["error", "syntax"],
        "react/jsx-handler-names": [
          "error",
          {
            checkInlineFunction: false,
            checkLocalVariables: false,
            eventHandlerPrefix: "handle",
            eventHandlerPropPrefix: "on",
          },
        ],
        "react/jsx-indent": ["error", 2],
        "react/jsx-indent-props": ["error", 2],
        "react/jsx-key": [
          "error",
          {
            checkFragmentShorthand: true,
            checkKeyMustBeforeSpread: true,
          },
        ],
        "react/jsx-max-depth": [2, { max: 5 }],
        "react/jsx-max-props-per-line": [
          "error",
          {
            maximum: 3,
            when: "multiline",
          },
        ],
        "react/jsx-newline": [
          "error",
          {
            prevent: true,
          },
        ],
        "react/jsx-no-bind": [
          "error",
          {
            allowArrowFunctions: true,
            allowBind: false,
            ignoreRefs: true,
          },
        ],
        "react/jsx-no-comment-textnodes": "error",
        "react/jsx-no-constructed-context-values": "error",
        "react/jsx-no-duplicate-props": "error",
        "react/jsx-no-leaked-render": "error",
        "react/jsx-no-literals": "off",
        "react/jsx-no-script-url": "error",
        "react/jsx-no-target-blank": "error",
        "react/jsx-no-undef": "error",
        "react/jsx-no-useless-fragment": [
          "error",
          {
            allowExpressions: true,
          },
        ],
        "react/jsx-one-expression-per-line": ["error", { allow: "literal" }],
        "react/jsx-pascal-case": [
          "error",
          {
            ignore: [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "h6",
              "p",
              "a",
              "ul",
              "ol",
              "li",
              "img",
              "div",
              "span",
              "dl",
              "dt",
              "dd",
            ],
          },
        ],
        "react/jsx-props-no-multi-spaces": "error",
        "react/jsx-props-no-spreading": "error",
        "react/jsx-sort-default-props": "error",
        "react/jsx-sort-props": "error",
        "react/jsx-tag-spacing": [
          "error",
          {
            afterOpening: "never",
            beforeSelfClosing: "always",
            closingSlash: "never",
          },
        ],
        "react/jsx-uses-react": "error",
        "react/jsx-uses-vars": "error",
        "react/jsx-wrap-multilines": "error",
        "react/no-access-state-in-setstate": "error",
        "react/no-adjacent-inline-elements": "off",
        "react/no-array-index-key": "error",
        "react/no-children-prop": "error",
        "react/no-danger": "error",
        "react/no-danger-with-children": "error",
        "react/no-deprecated": "error",
        "react/no-did-mount-set-state": "error",
        "react/no-did-update-set-state": "error",
        "react/no-direct-mutation-state": "error",
        "react/no-find-dom-node": "error",
        "react/no-is-mounted": "error",
        "react/no-multi-comp": ["error", { ignoreStateless: true }],
        "react/no-namespace": "error",
        "react/no-redundant-should-component-update": "error",
        "react/no-render-return-value": "error",
        "react/no-set-state": "error",
        "react/no-string-refs": "error",
        "react/no-this-in-sfc": "error",
        "react/no-typos": "error",
        "react/no-unescaped-entities": "error",
        "react/no-unknown-property": "error",
        "react/no-unsafe": "error",
        "react/no-unstable-nested-components": "error",
        "react/no-unused-prop-types": "error",
        "react/no-unused-state": "error",
        "react/no-will-update-set-state": "error",
        "react/prefer-es6-class": "error",
        "react/prefer-exact-props": "error",
        "react/prefer-read-only-props": "error",
        "react/prefer-stateless-function": [
          "error",
          {
            ignorePureComponents: true,
          },
        ],
        "react/prop-types": "error",
        "react/react-in-jsx-scope": "off",
        "react/require-default-props": "off",
        "react/require-optimization": "error",
        "react/require-render-return": "error",
        "react/self-closing-comp": "error",
        "react/sort-comp": "error",
        "react/sort-prop-types": "error",
        "react/state-in-constructor": ["error", "always"],
        "react/static-property-placement": "error",
        "react/style-prop-object": "error",
        "react/void-dom-elements-no-children": "error",

        // react-hooks
        "react-hooks/exhaustive-deps": "error",
        "react-hooks/rules-of-hooks": "error",

        // eslint-plugin-jsx-a11y
        "jsx-a11y/alt-text": "error",
        "jsx-a11y/anchor-has-content": "error",
        "jsx-a11y/anchor-is-valid": "error",
        "jsx-a11y/aria-activedescendant-has-tabindex": "error",
        "jsx-a11y/aria-props": "error",
        "jsx-a11y/aria-proptypes": "error",
        "jsx-a11y/aria-role": "error",
        "jsx-a11y/aria-unsupported-elements": "error",
        "jsx-a11y/autocomplete-valid": "error",
        "jsx-a11y/click-events-have-key-events": "error",
        "jsx-a11y/control-has-associated-label": "off",
        "jsx-a11y/heading-has-content": "error",
        "jsx-a11y/html-has-lang": "error",
        "jsx-a11y/iframe-has-title": "error",
        "jsx-a11y/img-redundant-alt": "error",
        "jsx-a11y/interactive-supports-focus": [
          "error",
          {
            tabbable: [
              "button",
              "checkbox",
              "link",
              "searchbox",
              "spinbutton",
              "switch",
              "textbox",
            ],
          },
        ],
        "jsx-a11y/label-has-associated-control": "error",
        "jsx-a11y/lang": "error",
        "jsx-a11y/media-has-caption": "error",
        "jsx-a11y/mouse-events-have-key-events": "error",
        "jsx-a11y/no-access-key": "error",
        "jsx-a11y/no-autofocus": "error",
        "jsx-a11y/no-distracting-elements": "error",
        "jsx-a11y/no-interactive-element-to-noninteractive-role": [
          "error",
          {
            canvas: ["img"],
            tr: ["none", "presentation"],
          },
        ],
        "jsx-a11y/no-noninteractive-element-interactions": [
          "error",
          {
            alert: ["onKeyUp", "onKeyDown", "onKeyPress"],
            body: ["onError", "onLoad"],
            dialog: ["onKeyUp", "onKeyDown", "onKeyPress"],
            handlers: [
              "onClick",
              "onError",
              "onLoad",
              "onMouseDown",
              "onMouseUp",
              "onKeyPress",
              "onKeyDown",
              "onKeyUp",
            ],
            iframe: ["onError", "onLoad"],
            img: ["onError", "onLoad"],
          },
        ],
        "jsx-a11y/no-noninteractive-element-to-interactive-role": [
          "error",
          {
            fieldset: ["radiogroup", "presentation"],
            li: ["menuitem", "option", "row", "tab", "treeitem"],
            ol: [
              "listbox",
              "menu",
              "menubar",
              "radiogroup",
              "tablist",
              "tree",
              "treegrid",
            ],
            table: ["grid"],
            td: ["gridcell"],
            ul: [
              "listbox",
              "menu",
              "menubar",
              "radiogroup",
              "tablist",
              "tree",
              "treegrid",
            ],
          },
        ],
        "jsx-a11y/no-noninteractive-tabindex": [
          "error",
          {
            allowExpressionValues: true,
            roles: ["tabpanel"],
            tags: [],
          },
        ],
        "jsx-a11y/no-redundant-roles": "error",
        "jsx-a11y/no-static-element-interactions": [
          "error",
          {
            allowExpressionValues: true,
            handlers: [
              "onClick",
              "onMouseDown",
              "onMouseUp",
              "onKeyPress",
              "onKeyDown",
              "onKeyUp",
            ],
          },
        ],
        "jsx-a11y/role-has-required-aria-props": "error",
        "jsx-a11y/role-supports-aria-props": "error",
        "jsx-a11y/scope": "error",
        "jsx-a11y/tabindex-no-positive": "error",
      },
    },
  ],
};

export = config;
