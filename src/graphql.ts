import * as graphqlPlugin from "@graphql-eslint/eslint-plugin";
import type { Linter } from "eslint";

export const graphqlConfig: Linter.Config = {
  files: ["**/*.{graphql,gql}"],
  languageOptions: {
    parser: graphqlPlugin,
    parserOptions: {
      operations: "**/*.graphql",
      // TODO: Make schema path configurable.
      schema: "**/schema.graphql",
    },
  },
  plugins: {
    "@graphql-eslint": graphqlPlugin,
  },
  rules: {
    "@graphql-eslint/alphabetize": [
      "error",
      {
        arguments: [
          "FieldDefinition",
          "Field",
          "DirectiveDefinition",
          "Directive",
        ],
        fields: [
          "ObjectTypeDefinition",
          "InterfaceTypeDefinition",
          "InputObjectTypeDefinition",
        ],
        selections: ["OperationDefinition", "FragmentDefinition"],
        values: ["EnumTypeDefinition"],
        variables: ["OperationDefinition"],
      },
    ],
    "@graphql-eslint/description-style": "error",
    "@graphql-eslint/executable-definitions": "off",
    "@graphql-eslint/fields-on-correct-type": "error",
    "@graphql-eslint/fragments-on-composite-type": "error",
    "@graphql-eslint/input-name": "error",
    "@graphql-eslint/known-argument-names": "error",
    "@graphql-eslint/known-directives": "error",
    "@graphql-eslint/known-fragment-names": "error",
    "@graphql-eslint/known-type-names": "error",
    "@graphql-eslint/lone-anonymous-operation": "error",
    "@graphql-eslint/lone-executable-definition": "error",
    "@graphql-eslint/lone-schema-definition": "error",
    "@graphql-eslint/match-document-filename": [
      "error",
      {
        fileExtension: ".graphql",
      },
    ],
    "@graphql-eslint/naming-convention": [
      "error",
      {
        allowLeadingUnderscore: true,
        EnumTypeDefinition: "PascalCase",
        EnumValueDefinition: "UPPER_CASE",
        FieldDefinition: "camelCase",
        InputObjectTypeDefinition: "PascalCase",
        InputValueDefinition: "camelCase",
        InterfaceTypeDefinition: "PascalCase",
        ObjectTypeDefinition: "PascalCase",
        ScalarTypeDefinition: "PascalCase",
        UnionTypeDefinition: "PascalCase",
      },
    ],
    "@graphql-eslint/no-anonymous-operations": "error",
    "@graphql-eslint/no-deprecated": "off",
    "@graphql-eslint/no-duplicate-fields": "error",
    "@graphql-eslint/no-fragment-cycles": "error",
    "@graphql-eslint/no-hashtag-description": "error",
    "@graphql-eslint/no-one-place-fragments": "off",
    "@graphql-eslint/no-root-type": "off",
    "@graphql-eslint/no-scalar-result-type-on-mutation": "error",
    "@graphql-eslint/no-typename-prefix": "error",
    "@graphql-eslint/no-undefined-variables": "error",
    "@graphql-eslint/no-unreachable-types": "error",
    "@graphql-eslint/no-unused-fields": "off",
    "@graphql-eslint/no-unused-fragments": "error",
    "@graphql-eslint/no-unused-variables": "error",
    "@graphql-eslint/one-field-subscriptions": "error",
    "@graphql-eslint/overlapping-fields-can-be-merged": "error",
    "@graphql-eslint/possible-fragment-spread": "error",
    "@graphql-eslint/possible-type-extension": "error",
    "@graphql-eslint/provided-required-arguments": "error",
    "@graphql-eslint/relay-arguments": "error",
    "@graphql-eslint/relay-connection-types": "error",
    "@graphql-eslint/relay-edge-types": "off",
    "@graphql-eslint/relay-page-info": "off",
    "@graphql-eslint/require-deprecation-date": "error",
    "@graphql-eslint/require-deprecation-reason": "error",
    "@graphql-eslint/require-description": "off",
    "@graphql-eslint/require-field-of-type-query-in-mutation-result": "off",
    "@graphql-eslint/require-import-fragment": "error",
    "@graphql-eslint/require-nullable-fields-with-oneof": "error",
    "@graphql-eslint/require-nullable-result-in-root": "off",
    "@graphql-eslint/require-selections": "error",
    "@graphql-eslint/require-type-pattern-with-oneof": "error",
    "@graphql-eslint/scalar-leafs": "error",
    "@graphql-eslint/selection-set-depth": ["error", { maxDepth: 5 }],
    "@graphql-eslint/strict-id-in-types": "error",
    "@graphql-eslint/unique-argument-names": "error",
    "@graphql-eslint/unique-directive-names": "error",
    "@graphql-eslint/unique-directive-names-per-location": "error",
    "@graphql-eslint/unique-enum-value-names": "error",
    "@graphql-eslint/unique-field-definition-names": "error",
    "@graphql-eslint/unique-fragment-name": "error",
    "@graphql-eslint/unique-input-field-names": "error",
    "@graphql-eslint/unique-operation-name": "error",
    "@graphql-eslint/unique-operation-types": "error",
    "@graphql-eslint/unique-type-names": "error",
    "@graphql-eslint/unique-variable-names": "error",
    "@graphql-eslint/value-literals-of-correct-type": "error",
    "@graphql-eslint/variables-are-input-types": "error",
    "@graphql-eslint/variables-in-allowed-position": "error",
  },
};
